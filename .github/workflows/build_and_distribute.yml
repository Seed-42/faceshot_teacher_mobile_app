name: Build and Distribute
# view full tutorial here: https://medium.com/flutterdevs/automation-flutter-with-github-actions-firebase-app-distribution-bd7193f0e0e8

# Github Actions will execute the workflow following the events under the key.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is comprised of at least one job.
jobs:
  build:
    # The sort of virtual host machine to run the activity on. For our case, we need ubuntu-latest.
    # Each ubuntu host machine contains different installed software. You can check a list of supported software, tools, and packages in each virtual environment here: https://help.github.com/en/github/automating-your-workflow-with-github-actions/software-in-virtual-environments-for-github-actions
    runs-on: ubuntu-latest

    # Set up the Flutter environment for Github Actions.
    steps:
    - uses: actions/checkout@v1

    # Note: This workflow uses the latest stable version of the Flutter SDK.
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - uses: subosito/flutter-action@v1
      with:
        channel: 'stable'

    # Get flutter dependencies.
    - run: flutter pub get
      
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
      
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
      
    # Run widget tests for our flutter project.
    #- run: flutter test
      
    # Build apk.
    - run: flutter build apk
      
    # Upload generated apk to the artifacts.
      uses: actions/upload-artifact@master
      with:
        name: apk-release
        path: build/app/outputs/bundle/release/app-release.apk

# name: Firebase App Distribution

# # Github Actions will execute the workflow following the events under the key.
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
# with:
#   appId: ${{secrets.FIREBASE_APP_ID}}
#   token: ${{secrets.FIREBASE_TOKEN}}
#   groups: testers
#   file: app/build/outputs/apk/release/app-release-unsigned.apk